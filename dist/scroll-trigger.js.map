{"version":3,"file":"scroll-trigger.js","sources":["../src/scroll-trigger.js"],"sourcesContent":["import './scroll-trigger.css';\n\n/**\n * ScrollTrigger - Scroll spy plugin for tracking section visibility\n *\n * Monitors when sections cross a configurable trigger line in the viewport\n * (measured from the bottom) and provides callbacks for navigation synchronization.\n *\n * @example\n * const trigger = new ScrollTrigger({\n *   sections: '.collection-section',\n *   offset: 100, // 100px from bottom of viewport\n *   onIndexChange: ({ currentIndex, currentElement }) => {\n *     console.log('Active section:', currentIndex);\n *   }\n * });\n */\nclass ScrollTrigger {\n  // Private fields\n  #sections = [];\n  #currentIndex = -1;\n  #observer = null;\n  #config = {\n    offset: 100,\n    threshold: 0.1,\n    throttle: 100,\n    behavior: 'smooth',\n    onIndexChange: null,\n  };\n  #intersectingMap = new Map();\n  #throttleTimer = null;\n  #isDestroyed = false;\n  #resizeObserver = null;\n\n  /**\n   * Create a new ScrollTrigger instance\n   * @param {Object} options - Configuration options\n   * @param {string|NodeList|Array} options.sections - Sections to track (CSS selector, NodeList, or Array of elements)\n   * @param {number|string} [options.offset=100] - Distance from bottom of viewport to trigger active state (px or percentage like '20%')\n   * @param {number} [options.threshold=0.1] - IntersectionObserver threshold (0-1)\n   * @param {number} [options.throttle=100] - Throttle delay for scroll events (ms)\n   * @param {string} [options.behavior='smooth'] - Scroll behavior ('smooth' or 'auto')\n   * @param {Function} [options.onIndexChange] - Callback when active section changes (receives object: { currentIndex, previousIndex, currentElement, previousElement })\n   */\n  constructor(options = {}) {\n    // Merge config\n    this.#config = { ...this.#config, ...options };\n\n    // Get sections\n    this.#sections = this.#getSections(this.#config.sections);\n\n    if (this.#sections.length === 0) {\n      console.warn('ScrollTrigger: No sections found');\n      return;\n    }\n\n    // Initialize observer\n    this.#setupObserver();\n\n    // Watch for viewport resize if any element uses percentage offset\n    if (this.#hasPercentageOffsets()) {\n      this.#setupResizeObserver();\n    }\n  }\n\n  /**\n   * Get sections from various input types\n   */\n  #getSections(input) {\n    if (typeof input === 'string') {\n      return Array.from(document.querySelectorAll(input));\n    } else if (input instanceof NodeList) {\n      return Array.from(input);\n    } else if (Array.isArray(input)) {\n      return input;\n    }\n    return [];\n  }\n\n  /**\n   * Check if offset is a percentage value\n   */\n  #isPercentageOffset(offset) {\n    return typeof offset === 'string' && offset.includes('%');\n  }\n\n  /**\n   * Calculate pixel offset from bottom of viewport\n   * Converts percentage or pixel value to pixels from bottom\n   */\n  #calculateOffset(offset) {\n    if (this.#isPercentageOffset(offset)) {\n      const percentage = parseFloat(offset) / 100;\n      return Math.round(window.innerHeight * percentage);\n    }\n    return typeof offset === 'number' ? offset : 100;\n  }\n\n  /**\n   * Get the offset for a specific element (custom or default)\n   * Checks for data-animate-offset attribute, falls back to config\n   */\n  #getElementOffset(element) {\n    if (!element) return this.#config.offset;\n\n    const customOffset = element.getAttribute('data-animate-offset');\n    if (customOffset !== null) {\n      // Parse as number if it's just digits, otherwise return as string (for percentages)\n      return /^\\d+$/.test(customOffset) ? parseInt(customOffset, 10) : customOffset;\n    }\n\n    return this.#config.offset;\n  }\n\n  /**\n   * Check if any element (or config) uses a percentage offset\n   */\n  #hasPercentageOffsets() {\n    // Check global config\n    if (this.#isPercentageOffset(this.#config.offset)) {\n      return true;\n    }\n\n    // Check if any element has a custom percentage offset\n    return this.#sections.some((section) => {\n      const customOffset = section.getAttribute('data-animate-offset');\n      return customOffset && this.#isPercentageOffset(customOffset);\n    });\n  }\n\n  /**\n   * Setup ResizeObserver to handle viewport changes with percentage offsets\n   */\n  #setupResizeObserver() {\n    this.#resizeObserver = new ResizeObserver(() => {\n      // Recreate observer with new calculated offset\n      if (this.#observer) {\n        this.#observer.disconnect();\n      }\n      this.#setupObserver();\n    });\n\n    this.#resizeObserver.observe(document.documentElement);\n  }\n\n  /**\n   * Setup IntersectionObserver to track sections\n   */\n  #setupObserver() {\n    // Calculate pixel offset from bottom (handles both px and %)\n    const offsetPx = this.#calculateOffset(this.#config.offset);\n\n    // Create observer with offset from bottom\n    // Top margin removes everything above, bottom margin creates trigger zone\n    const rootMargin = `0px 0px -${offsetPx}px 0px`;\n\n    this.#observer = new IntersectionObserver(\n      (entries) => this.#handleIntersection(entries),\n      {\n        root: null,\n        rootMargin: rootMargin,\n        threshold: this.#config.threshold,\n      }\n    );\n\n    // Observe all sections\n    this.#sections.forEach((section) => {\n      this.#observer.observe(section);\n      this.#intersectingMap.set(section, false);\n    });\n  }\n\n  /**\n   * Handle intersection events\n   */\n  #handleIntersection(entries) {\n    if (this.#isDestroyed) return;\n\n    // Update intersecting map\n    entries.forEach((entry) => {\n      this.#intersectingMap.set(entry.target, entry.isIntersecting);\n    });\n\n    // Throttle index calculation\n    this.#throttleIndexUpdate();\n  }\n\n  /**\n   * Throttle index updates to prevent excessive calls\n   */\n  #throttleIndexUpdate() {\n    if (this.#throttleTimer) return;\n\n    this.#throttleTimer = setTimeout(() => {\n      this.#updateActiveIndex();\n      this.#throttleTimer = null;\n    }, this.#config.throttle);\n  }\n\n  /**\n   * Update the active index based on intersecting sections\n   * Supports per-element custom offsets via data-animate-offset attribute\n   */\n  #updateActiveIndex() {\n    if (this.#isDestroyed) return;\n\n    // Check each section against its custom offset\n    let newIndex = -1;\n\n    // Find the closest section that has crossed its trigger line\n    // Check from bottom to top to find the last one that crossed\n    for (let i = this.#sections.length - 1; i >= 0; i--) {\n      const section = this.#sections[i];\n      const elementOffset = this.#getElementOffset(section);\n      const offsetPx = this.#calculateOffset(elementOffset);\n      const triggerLine = window.innerHeight - offsetPx;\n\n      const rect = section.getBoundingClientRect();\n\n      // If this section's top is at or above its trigger line, it's active\n      if (rect.top <= triggerLine) {\n        newIndex = i;\n        break;\n      }\n    }\n\n    // Fire callback if index changed\n    if (newIndex !== this.#currentIndex) {\n      const previousIndex = this.#currentIndex;\n      this.#currentIndex = newIndex;\n\n      const currentElement = this.#sections[newIndex] || null;\n      const previousElement = this.#sections[previousIndex] || null;\n\n      if (this.#config.onIndexChange && typeof this.#config.onIndexChange === 'function') {\n        this.#config.onIndexChange({\n          currentIndex: newIndex,\n          previousIndex,\n          currentElement,\n          previousElement,\n        });\n      }\n\n      // Emit custom event\n      this.#emitEvent('scroll-trigger:change', {\n        index: newIndex,\n        previousIndex,\n        section: currentElement,\n        previousSection: previousElement,\n      });\n    }\n  }\n\n  /**\n   * Emit custom event\n   */\n  #emitEvent(eventName, detail) {\n    if (typeof window !== 'undefined') {\n      window.dispatchEvent(\n        new CustomEvent(eventName, {\n          bubbles: true,\n          detail: detail,\n        })\n      );\n    }\n  }\n\n  /**\n   * Get the current active index\n   * @returns {number} Current active section index (-1 if none)\n   */\n  getCurrentIndex() {\n    return this.#currentIndex;\n  }\n\n  /**\n   * Get the current active section element\n   * @returns {Element|null} Current active section element or null\n   */\n  getCurrentSection() {\n    return this.#sections[this.#currentIndex] || null;\n  }\n\n  /**\n   * Get all tracked sections\n   * @returns {Array<Element>} Array of section elements\n   */\n  getSections() {\n    return [...this.#sections];\n  }\n\n  /**\n   * Scroll to a specific section by index\n   * @param {number} index - Index of section to scroll to\n   * @param {Object} [options] - Scroll options\n   * @param {string} [options.behavior] - Scroll behavior ('smooth' or 'auto')\n   * @param {number} [options.offset] - Additional offset in pixels (positive = section appears higher, negative = section appears lower)\n   */\n  scrollToIndex(index, options = {}) {\n    if (index < 0 || index >= this.#sections.length) {\n      console.warn(`ScrollTrigger: Invalid index ${index}`);\n      return;\n    }\n\n    const section = this.#sections[index];\n    const behavior = options.behavior || this.#config.behavior;\n    const additionalOffset = options.offset || 0;\n\n    // Calculate offset from bottom in pixels (respects element's custom offset)\n    const elementOffset = this.#getElementOffset(section);\n    const offsetPx = this.#calculateOffset(elementOffset);\n    const triggerLine = window.innerHeight - offsetPx;\n\n    const rect = section.getBoundingClientRect();\n    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n    const targetPosition = rect.top + scrollTop - triggerLine - additionalOffset;\n\n    window.scrollTo({\n      top: targetPosition,\n      behavior: behavior,\n    });\n  }\n\n  /**\n   * Scroll to a specific section element\n   * @param {Element} section - Section element to scroll to\n   * @param {Object} [options] - Scroll options (see scrollToIndex)\n   */\n  scrollToSection(section, options = {}) {\n    const index = this.#sections.indexOf(section);\n    if (index === -1) {\n      console.warn('ScrollTrigger: Section not found in tracked sections');\n      return;\n    }\n    this.scrollToIndex(index, options);\n  }\n\n  /**\n   * Recalculate section positions (call if DOM changes)\n   */\n  refresh() {\n    if (this.#isDestroyed) return;\n\n    // Re-observe sections to update positions\n    this.#sections.forEach((section) => {\n      this.#observer.unobserve(section);\n      this.#observer.observe(section);\n    });\n\n    // Force index update\n    this.#updateActiveIndex();\n  }\n\n  /**\n   * Update configuration\n   * @param {Object} newConfig - New configuration options\n   */\n  updateConfig(newConfig = {}) {\n    if (this.#isDestroyed) return;\n\n    const needsObserverUpdate =\n      ('offset' in newConfig && newConfig.offset !== this.#config.offset) ||\n      ('threshold' in newConfig && newConfig.threshold !== this.#config.threshold);\n\n    this.#config = { ...this.#config, ...newConfig };\n\n    // Handle resize observer for percentage changes\n    if ('offset' in newConfig) {\n      const hasPercentages = this.#hasPercentageOffsets();\n\n      if (hasPercentages && !this.#resizeObserver) {\n        this.#setupResizeObserver();\n      } else if (!hasPercentages && this.#resizeObserver) {\n        this.#resizeObserver.disconnect();\n        this.#resizeObserver = null;\n      }\n    }\n\n    if (needsObserverUpdate) {\n      if (this.#observer) {\n        this.#observer.disconnect();\n      }\n      this.#setupObserver();\n    }\n  }\n\n  /**\n   * Destroy the tracker and cleanup\n   */\n  destroy() {\n    if (this.#isDestroyed) return;\n\n    this.#isDestroyed = true;\n\n    // Clear throttle timer\n    if (this.#throttleTimer) {\n      clearTimeout(this.#throttleTimer);\n      this.#throttleTimer = null;\n    }\n\n    // Disconnect observer\n    if (this.#observer) {\n      this.#observer.disconnect();\n      this.#observer = null;\n    }\n\n    // Disconnect resize observer\n    if (this.#resizeObserver) {\n      this.#resizeObserver.disconnect();\n      this.#resizeObserver = null;\n    }\n\n    // Clear maps and arrays\n    this.#intersectingMap.clear();\n    this.#sections = [];\n    this.#currentIndex = -1;\n  }\n}\n\n// Export for external use\nexport { ScrollTrigger };\nexport default ScrollTrigger;\n"],"names":[],"mappings":"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"}